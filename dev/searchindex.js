Search.setIndex({"docnames": ["api", "auto_examples/index", "generated/sktree.UnsupervisedObliqueRandomForest", "generated/sktree.UnsupervisedRandomForest", "generated/sktree.tree.UnsupervisedDecisionTree", "generated/sktree.tree.UnsupervisedObliqueDecisionTree", "index", "install", "use", "whats_new", "whats_new/_contributors", "whats_new/v0.1"], "filenames": ["api.rst", "auto_examples/index.rst", "generated/sktree.UnsupervisedObliqueRandomForest.rst", "generated/sktree.UnsupervisedRandomForest.rst", "generated/sktree.tree.UnsupervisedDecisionTree.rst", "generated/sktree.tree.UnsupervisedObliqueDecisionTree.rst", "index.rst", "install.rst", "use.rst", "whats_new.rst", "whats_new/_contributors.rst", "whats_new/v0.1.rst"], "titles": ["API Documentation", "Examples", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree</span></code>.UnsupervisedObliqueRandomForest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree</span></code>.UnsupervisedRandomForest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree.tree</span></code>.UnsupervisedDecisionTree", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sktree.tree</span></code>.UnsupervisedObliqueDecisionTree", "<strong>scikit-tree</strong>", "Installation", "Examples using scikit-tree", "Release History", "&lt;no title&gt;", "What\u2019s new?"], "terms": {"sktree": [0, 7], "scikit": [0, 1, 2, 3, 4, 5, 7, 9, 11], "manifold": 0, "obliqu": [0, 2, 5, 7, 11], "random": [0, 2, 3, 4, 5, 11], "forest": [0, 2, 3, 11], "decis": [0, 2, 3, 4, 5], "tree": [0, 1, 2, 3, 7, 9, 11], "model": [0, 2, 3, 4, 5], "ar": [0, 2, 3, 4, 5, 6, 9], "tradition": 0, "us": [0, 1, 2, 3, 4, 5, 6, 7], "classif": [0, 2, 3], "regress": [0, 2, 3, 4, 5], "howev": 0, "thei": [0, 2, 3, 4, 5], "also": [0, 2, 3, 4, 5, 6], "power": 0, "non": [0, 2, 3, 4, 5], "parametr": 0, "embed": 0, "cluster": [0, 2, 3, 4, 5], "The": [0, 2, 3, 4, 5], "randomtreesembed": 0, "i": [0, 2, 3, 4, 5, 6, 7], "an": [0, 2, 3, 4, 5, 7], "exampl": [0, 2, 3, 4, 5, 6], "we": [0, 6, 7, 11], "implement": [0, 11], "other": [0, 2, 3], "state": 0, "art": 0, "explicitli": 0, "split": [0, 2, 3, 4, 5], "base": [0, 2, 3, 4, 5, 6], "criterion": [0, 2, 3, 4, 5], "varianc": [0, 2, 3, 4, 5], "bic": [0, 2, 3, 4, 5], "demonstr": [1, 8], "how": [1, 2, 3, 4, 5, 6, 8], "algorithm": [1, 2, 3, 4, 5, 6, 8], "download": [1, 8], "all": [1, 2, 3, 4, 5, 8, 9], "python": [1, 7, 8], "sourc": [1, 2, 3, 4, 5, 6, 8], "code": [1, 4, 5, 7, 8], "auto_examples_python": [1, 8], "zip": [1, 8], "jupyt": [1, 8], "notebook": [1, 8], "auto_examples_jupyt": [1, 8], "galleri": [1, 8], "gener": [1, 2, 3, 8], "sphinx": [1, 8], "class": [2, 3, 4, 5], "n_estim": [2, 3], "100": [2, 3], "twomean": [2, 3, 4, 5], "max_depth": [2, 3, 4, 5], "none": [2, 3, 4, 5], "min_samples_split": [2, 3, 4, 5], "2": [2, 3, 4, 5, 7], "min_samples_leaf": [2, 3, 4, 5], "1": [2, 3, 4, 5, 6, 7, 9], "min_weight_fraction_leaf": [2, 3, 4, 5], "0": [2, 3, 4, 5, 6, 7, 9], "max_featur": [2, 3, 4, 5], "sqrt": [2, 3, 4, 5], "max_leaf_nod": [2, 3, 4, 5], "min_impurity_decreas": [2, 3, 4, 5], "bootstrap": [2, 3], "fals": [2, 3], "oob_scor": [2, 3], "n_job": [2, 3], "random_st": [2, 3, 4, 5], "verbos": [2, 3, 7], "warm_start": [2, 3], "max_sampl": [2, 3], "feature_combin": [2, 5], "5": [2, 5], "clustering_func": [2, 3, 4, 5], "clustering_func_arg": [2, 3, 4, 5], "unsupervis": [2, 3, 4, 5, 6, 11], "inher": [2, 3], "simultan": [2, 3], "comput": [2, 3, 4, 5], "adapt": [2, 3], "affin": [2, 3, 4, 5], "matrix": [2, 3, 4, 5], "distanc": [2, 3, 4, 5], "e": [2, 3, 7], "do": [2, 3, 4, 5], "sampl": [2, 3, 4, 5], "fall": [2, 3], "within": [2, 3, 4, 5, 7], "same": [2, 3], "leaf": [2, 3, 4, 5], "paramet": [2, 3, 4, 5], "int": [2, 3, 4, 5], "option": [2, 3, 4, 5, 7], "number": [2, 3, 4, 5], "fit": [2, 3, 4, 5], "default": [2, 3, 4, 5], "fastbic": [2, 3, 4, 5], "function": [2, 3, 4, 5], "measur": [2, 3, 4, 5], "qualiti": [2, 3, 4, 5], "support": [2, 3, 4, 5, 7], "criteria": [2, 3, 4, 5], "maxim": [2, 3], "bayesian": [2, 3], "inform": [2, 3], "see": [2, 3, 4, 5, 6], "mathemat": [2, 3], "formul": [2, 3], "maximum": [2, 3, 4, 5], "depth": [2, 3, 4, 5], "If": [2, 3, 4, 5], "node": [2, 3, 4, 5], "expand": [2, 3, 4, 5], "until": [2, 3, 4, 5], "leav": [2, 3, 4, 5], "pure": [2, 3, 4, 5], "contain": [2, 3, 4, 5], "less": [2, 3, 4, 5], "than": [2, 3, 4, 5], "float": [2, 3, 4, 5], "minimum": [2, 3, 4, 5], "requir": [2, 3, 4, 5], "intern": [2, 3, 4, 5], "consid": [2, 3, 4, 5], "fraction": [2, 3, 4, 5], "ceil": [2, 3, 4, 5], "n_sampl": [2, 3, 4, 5], "each": [2, 3, 4, 5], "A": [2, 3, 4, 5], "point": [2, 3, 4, 5], "ani": [2, 3, 4, 5], "onli": [2, 3, 4, 5], "least": [2, 3, 4, 5], "train": [2, 3, 4, 5], "left": [2, 3, 4, 5], "right": [2, 3, 4, 5], "branch": [2, 3, 4, 5], "thi": [2, 3, 4, 5, 7, 9], "mai": [2, 3, 4, 5], "have": [2, 3, 4, 5], "effect": [2, 3, 4, 5, 8], "smooth": [2, 3, 4, 5], "especi": [2, 3, 4, 5], "weight": [2, 3, 4, 5], "sum": [2, 3, 4, 5], "total": [2, 3, 4, 5], "input": [2, 3, 4, 5], "equal": [2, 3, 4, 5], "when": [2, 3, 4, 5, 9], "sample_weight": [2, 3, 4, 5], "provid": [2, 3, 4, 5], "log2": [2, 3, 4, 5], "featur": [2, 3, 4, 5, 9, 10, 11], "look": [2, 3, 4, 5, 8], "best": [2, 3, 4, 5], "max": [2, 3, 4, 5], "n_features_in_": [2, 3, 4, 5], "auto": [2, 3, 4, 5], "n_featur": [2, 3, 4, 5], "note": [2, 3, 4, 5, 7, 9], "search": [2, 3, 4, 5], "doe": [2, 3], "stop": [2, 3], "one": [2, 3, 4, 5], "valid": [2, 3, 4, 5], "partit": [2, 3], "found": [2, 3, 4, 5], "even": [2, 3, 4, 5], "inspect": [2, 3, 4, 5], "more": [2, 3], "grow": [2, 3, 4, 5], "first": [2, 3, 4, 5, 7], "fashion": [2, 3, 4, 5], "defin": [2, 3, 4, 5], "rel": [2, 3, 4, 5], "reduct": [2, 3, 4, 5], "impur": [2, 3, 4, 5], "unlimit": [2, 3, 4, 5], "induc": [2, 3, 4, 5], "decreas": [2, 3, 4, 5], "greater": [2, 3, 4, 5], "valu": [2, 3, 4, 5], "equat": [2, 3, 4, 5], "follow": [2, 3, 4, 5], "n_t": [2, 3, 4, 5], "n": [2, 3, 4, 5, 7], "n_t_r": [2, 3, 4, 5], "right_impur": [2, 3, 4, 5], "n_t_l": [2, 3, 4, 5], "left_impur": [2, 3, 4, 5], "where": [2, 3, 4, 5], "current": [2, 3, 4, 5, 7], "child": [2, 3, 4, 5], "refer": [2, 3, 4, 5], "pass": [2, 3, 4, 5], "bool": [2, 3, 4, 5], "whether": [2, 3, 4, 5], "callabl": [2, 3, 4, 5], "out": [2, 3], "bag": [2, 3], "estim": [2, 3, 4, 5], "score": [2, 3], "By": [2, 3, 4, 5], "calinski_harabasz_scor": [2, 3], "signatur": [2, 3], "metric": [2, 3], "x": [2, 3, 4, 5], "predicted_label": [2, 3], "custom": [2, 3], "avail": [2, 3, 7], "true": [2, 3, 4, 5], "from": [2, 3, 6], "learn": [2, 3, 4, 5, 6, 7, 8], "sklearn": [2, 3, 4, 5, 7], "silhouette_scor": [2, 3], "davies_bouldin_scor": [2, 3], "cpu": [2, 3], "joblib": [2, 3, 7], "parallel": [2, 3], "construct": [2, 3], "seed": [2, 3], "continu": [2, 3], "previou": [2, 3], "instant": [2, 3], "draw": [2, 3], "shape": [2, 3, 4, 5], "thu": [2, 3], "should": [2, 3, 7], "interv": [2, 3], "combin": [2, 5], "averag": [2, 5], "compat": [2, 3, 4, 5], "take": [2, 3, 4, 5], "return": [2, 3, 4, 5], "label": [2, 3, 4, 5], "agglomerativeclust": [2, 3, 4, 5], "dict": [2, 3, 4, 5], "keyword": [2, 3, 4, 5], "argument": [2, 3, 4, 5], "attribut": [2, 3, 4, 5], "estimator_": [2, 3], "unsuperviseddecisiontre": [2, 3], "ensembl": [2, 3], "estimators_": [2, 3], "list": [2, 3, 11], "collect": [2, 3], "sub": [2, 3], "seen": [2, 3], "dure": [2, 3, 4, 5], "feature_names_in_": [2, 3], "ndarrai": [2, 3, 4, 5], "name": [2, 3, 4, 5], "ha": [2, 3, 4, 5, 11], "string": [2, 3, 4, 5], "feature_importances_": [2, 3, 4, 5], "import": [2, 3, 4, 5], "labels_": [2, 3], "affinity_matrix_": [2, 3], "store": [2, 3], "proxim": [2, 3], "oob": [2, 3], "oob_score_": [2, 3], "dataset": [2, 3], "obtain": [2, 3, 4, 5], "exist": [2, 3], "oob_decision_function_": [2, 3], "set": [2, 3, 4, 5], "small": [2, 3], "might": [2, 3], "possibl": [2, 3, 4, 5], "data": [2, 3, 4, 5], "wa": [2, 3], "never": [2, 3], "In": [2, 3, 4, 5, 11], "case": [2, 3, 4, 5], "nan": [2, 3], "method": [2, 3, 4, 5], "appli": [2, 3, 4, 5], "indic": [2, 3, 4, 5], "array_lik": [2, 3, 4, 5], "spars": [2, 3, 4, 5], "its": [2, 3], "dtype": [2, 3, 4, 5], "convert": [2, 3, 4, 5], "np": [2, 3, 4, 5], "float32": [2, 3, 4, 5], "csr_matrix": [2, 3, 4, 5], "x_leav": [2, 3, 4, 5], "For": [2, 3, 4, 5], "datapoint": [2, 3, 4, 5], "index": [2, 3, 4, 5, 6], "end": [2, 3, 4, 5], "up": [2, 3, 4, 5], "decision_path": [2, 3, 4, 5], "path": [2, 3, 4, 5], "new": [2, 3, 4, 5, 6, 9], "version": [2, 3, 4, 5, 6, 7, 9], "18": [2, 3, 4, 5], "n_node": [2, 3, 4, 5], "zero": [2, 3, 4, 5], "element": [2, 3, 4, 5], "goe": [2, 3, 4, 5], "through": [2, 3, 4, 5, 6], "csr": [2, 3, 4, 5], "format": [2, 3, 4, 5], "n_nodes_ptr": [2, 3], "column": [2, 3], "give": [2, 3], "th": [2, 3], "y": [2, 3, 4, 5], "effici": [2, 3, 9, 10, 11], "matric": [2, 3], "csc_matrix": [2, 3, 4, 5], "ignor": [2, 3, 4, 5], "Not": [2, 3, 4, 5], "present": [2, 3, 4, 5], "api": [2, 3, 4, 5, 6, 7, 9, 10, 11], "consist": [2, 3, 4, 5], "convent": [2, 3, 4, 5], "would": [2, 3, 4, 5, 7], "creat": [2, 3, 4, 5, 7], "net": [2, 3, 4, 5], "neg": [2, 3, 4, 5], "while": [2, 3, 4, 5], "result": [2, 3, 4, 5], "singl": [2, 3, 4, 5], "carri": [2, 3, 4, 5], "either": [2, 3, 4, 5], "self": [2, 3, 4, 5], "object": [2, 3, 4, 5], "instanc": [2, 3, 4, 5], "itself": [2, 3], "fit_predict": [2, 3, 4, 5], "perform": [2, 3, 4, 5, 6], "int64": [2, 3, 4, 5], "fit_transform": [2, 3, 4, 5], "fit_param": [2, 3, 4, 5], "transform": [2, 3, 4, 5], "n_output": [2, 3, 4, 5], "target": [2, 3, 4, 5], "addit": [2, 3, 4, 5], "x_new": [2, 3, 4, 5], "arrai": [2, 3, 4, 5], "n_features_new": [2, 3, 4, 5], "get_param": [2, 3, 4, 5], "deep": [2, 3, 4, 5], "get": [2, 3, 4, 5], "subobject": [2, 3, 4, 5], "param": [2, 3, 4, 5], "map": [2, 3, 4, 5], "predict": [2, 3, 4, 5], "vote": [2, 3], "probabl": [2, 3], "That": [2, 3, 4, 5], "highest": [2, 3], "mean": [2, 3, 11], "across": [2, 3, 4, 5], "set_output": [2, 3, 4, 5], "output": [2, 3, 4, 5], "introduc": [2, 3, 4, 5], "panda": [2, 3, 4, 5], "configur": [2, 3, 4, 5], "datafram": [2, 3, 4, 5], "unchang": [2, 3, 4, 5], "set_param": [2, 3, 4, 5], "work": [2, 3, 4, 5], "simpl": [2, 3, 4, 5], "well": [2, 3, 4, 5], "nest": [2, 3, 4, 5], "pipelin": [2, 3, 4, 5], "latter": [2, 3, 4, 5], "form": [2, 3, 4, 5], "compon": [2, 3, 4, 5], "__": [2, 3, 4, 5], "so": [2, 3, 4, 5], "": [2, 3, 4, 5, 6, 7, 9], "updat": [2, 3, 4, 5], "space": [2, 3, 4, 5], "dimens": [2, 3, 4, 5], "center": [2, 3, 4, 5], "typic": [2, 3, 4, 5], "dens": [2, 3, 4, 5], "properti": [2, 3, 4, 5], "base_estimator_": [2, 3], "higher": [2, 3], "normal": [2, 3, 4, 5], "brought": [2, 3, 4, 5], "It": [2, 3, 4, 5, 6], "known": [2, 3, 4, 5], "gini": [2, 3, 4, 5], "warn": [2, 3, 4, 5], "can": [2, 3, 4, 5, 7], "mislead": [2, 3, 4, 5], "high": [2, 3, 4, 5], "cardin": [2, 3, 4, 5], "mani": [2, 3, 4, 5], "uniqu": [2, 3, 4, 5], "permutation_import": [2, 3, 4, 5], "altern": [2, 3, 4, 5], "unless": [2, 3, 4, 5], "root": [2, 3, 4, 5], "which": [2, 3, 7], "splitter": [4, 5], "unsupervisedcriterion": [4, 5], "user": [4, 5, 7], "must": [4, 5], "abid": [4, 5], "cython": [4, 5, 7], "strategi": [4, 5], "choos": [4, 5], "unsupervisedsplitt": [4, 5], "randomst": [4, 5], "control": [4, 5], "alwai": [4, 5, 7], "randomli": [4, 5], "permut": [4, 5], "select": [4, 5], "befor": [4, 5], "find": [4, 5], "among": [4, 5], "them": [4, 5], "But": [4, 5], "vari": [4, 5], "differ": [4, 5], "run": [4, 5, 7], "improv": [4, 5, 11], "ident": [4, 5], "sever": [4, 5], "To": [4, 5, 7, 8], "determinist": [4, 5], "behaviour": [4, 5], "fix": [4, 5, 9, 10, 11], "integ": [4, 5], "detail": [4, 5], "check_input": [4, 5], "17": [4, 5], "allow": [4, 5], "bypass": [4, 5], "check": [4, 5], "don": [4, 5], "t": [4, 5], "you": [4, 5, 6, 7, 8], "know": [4, 5], "what": [4, 5, 6, 9], "re": [4, 5], "tree_": [4, 5], "node_count": [4, 5], "possibli": [4, 5], "gap": [4, 5], "cost_complexity_pruning_path": [4, 5], "prune": [4, 5], "minim": [4, 5], "cost": [4, 5], "complex": [4, 5], "process": [4, 5], "ccp_path": [4, 5], "bunch": [4, 5], "dictionari": [4, 5], "like": [4, 5, 7], "ccp_alpha": [4, 5], "alpha": [4, 5], "subtre": [4, 5], "correspond": [4, 5], "get_depth": [4, 5], "between": [4, 5], "get_n_leav": [4, 5], "n_leav": [4, 5], "assign": [4, 5], "packag": [6, 7], "modern": 6, "supervis": 6, "problem": 6, "extend": 6, "robust": 6, "achiev": 6, "strong": 6, "benchmark": 6, "task": 6, "encourag": 6, "your": 6, "research": 6, "build": [6, 7], "top": 6, "relev": 6, "pull": 6, "request": 6, "our": 6, "walk": 6, "contribut": [6, 11], "guid": 6, "licens": 6, "under": 6, "bsd": 6, "3": [6, 7], "document": 6, "releas": 6, "histori": 6, "instal": 6, "depend": 6, "pip": 6, "meson": 6, "conda": 6, "recommend": 6, "modul": 6, "numpi": 7, "23": 7, "scipi": 7, "6": 7, "matplotlib": 7, "8": 7, "pypi": 7, "http": 7, "org": 7, "project": [7, 11], "just": 7, "poetri": 7, "add": 7, "clone": 7, "repositori": 7, "neurodata": 7, "git": 7, "github": 7, "com": 7, "cd": 7, "ideal": 7, "start": 7, "virtual": 7, "environ": 7, "dev": 7, "9": [7, 11], "activ": 7, "Then": 7, "r": 7, "build_requir": 7, "txt": 7, "scientif": 7, "devpi": 7, "py": 7, "cli": 7, "local": 7, "j": 7, "now": 7, "test": 7, "via": 7, "abl": [7, 8], "edit": 7, "mode": 7, "pend": 7, "file": 7, "isol": 7, "u": 7, "repo": 7, "zipbal": 7, "master": 7, "necessari": 7, "c": 7, "forg": 7, "threadpoolctl": 7, "pytest": 7, "compil": 7, "llvm": 7, "openmp": 7, "next": 7, "directori": 7, "dodiscov": 7, "purpos": 7, "main": 7, "obliquepr": 7, "need": [7, 8], "develop": [7, 11], "pr": 7, "22754": 7, "checkout": 7, "page": [7, 9], "instruct": 7, "some": 8, "here": [8, 11], "everyth": 8, "major": [9, 10, 11], "enhanc": [9, 10, 11], "chang": [9, 10, 11], "link": 9, "tip": 9, "subscrib": 9, "librari": 9, "io": 9, "notifi": 9, "two": 11, "adam": 11, "li": 11, "11": 11, "thank": 11, "everyon": 11, "who": 11, "mainten": 11, "sinc": 11, "incept": 11, "includ": 11}, "objects": {"": [[0, 0, 0, "-", "sktree"]], "sktree": [[2, 1, 1, "", "UnsupervisedObliqueRandomForest"], [3, 1, 1, "", "UnsupervisedRandomForest"]], "sktree.UnsupervisedObliqueRandomForest": [[2, 2, 1, "", "apply"], [2, 3, 1, "", "base_estimator_"], [2, 2, 1, "", "decision_path"], [2, 3, 1, "", "estimator_"], [2, 3, 1, "", "feature_importances_"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "fit_predict"], [2, 2, 1, "", "fit_transform"], [2, 2, 1, "", "get_params"], [2, 2, 1, "", "predict"], [2, 2, 1, "", "set_output"], [2, 2, 1, "", "set_params"], [2, 2, 1, "", "transform"]], "sktree.UnsupervisedRandomForest": [[3, 2, 1, "", "apply"], [3, 3, 1, "", "base_estimator_"], [3, 2, 1, "", "decision_path"], [3, 3, 1, "", "estimator_"], [3, 3, 1, "", "feature_importances_"], [3, 2, 1, "", "fit"], [3, 2, 1, "", "fit_predict"], [3, 2, 1, "", "fit_transform"], [3, 2, 1, "", "get_params"], [3, 2, 1, "", "predict"], [3, 2, 1, "", "set_output"], [3, 2, 1, "", "set_params"], [3, 2, 1, "", "transform"]], "sktree.tree": [[4, 1, 1, "", "UnsupervisedDecisionTree"], [5, 1, 1, "", "UnsupervisedObliqueDecisionTree"]], "sktree.tree.UnsupervisedDecisionTree": [[4, 2, 1, "", "apply"], [4, 2, 1, "", "cost_complexity_pruning_path"], [4, 2, 1, "", "decision_path"], [4, 3, 1, "", "feature_importances_"], [4, 2, 1, "", "fit_predict"], [4, 2, 1, "", "fit_transform"], [4, 2, 1, "", "get_depth"], [4, 2, 1, "", "get_n_leaves"], [4, 2, 1, "", "get_params"], [4, 2, 1, "", "predict"], [4, 2, 1, "", "set_output"], [4, 2, 1, "", "set_params"], [4, 2, 1, "", "transform"]], "sktree.tree.UnsupervisedObliqueDecisionTree": [[5, 2, 1, "", "apply"], [5, 2, 1, "", "cost_complexity_pruning_path"], [5, 2, 1, "", "decision_path"], [5, 3, 1, "", "feature_importances_"], [5, 2, 1, "", "fit_predict"], [5, 2, 1, "", "fit_transform"], [5, 2, 1, "", "get_depth"], [5, 2, 1, "", "get_n_leaves"], [5, 2, 1, "", "get_params"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "set_output"], [5, 2, 1, "", "set_params"], [5, 2, 1, "", "transform"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "document": [0, 11], "unsupervis": 0, "exampl": [1, 8], "sktree": [2, 3, 4, 5], "unsupervisedobliquerandomforest": 2, "unsupervisedrandomforest": 3, "tree": [4, 5, 6, 8], "unsuperviseddecisiontre": 4, "unsupervisedobliquedecisiontre": 5, "scikit": [6, 8], "content": 6, "get": 6, "start": 6, "indic": 6, "tabl": 6, "instal": 7, "depend": 7, "pip": 7, "from": 7, "sourc": 7, "meson": 7, "conda": 7, "recommend": 7, "us": 8, "releas": 9, "histori": 9, "what": 11, "": 11, "new": 11, "version": 11, "0": 11, "1": 11, "changelog": 11, "code": 11, "contributor": 11}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"API Documentation": [[0, "api-documentation"]], "Unsupervised": [[0, "unsupervised"]], "Examples": [[1, "examples"], [8, "examples"]], "sktree.UnsupervisedObliqueRandomForest": [[2, "sktree-unsupervisedobliquerandomforest"]], "sktree.UnsupervisedRandomForest": [[3, "sktree-unsupervisedrandomforest"]], "sktree.tree.UnsupervisedDecisionTree": [[4, "sktree-tree-unsuperviseddecisiontree"]], "sktree.tree.UnsupervisedObliqueDecisionTree": [[5, "sktree-tree-unsupervisedobliquedecisiontree"]], "scikit-tree": [[6, "scikit-tree"]], "Contents": [[6, "contents"]], "Getting started:": [[6, null]], "Indices and tables": [[6, "indices-and-tables"]], "Installation": [[7, "installation"]], "Dependencies": [[7, "dependencies"]], "Installing with pip": [[7, "installing-with-pip"]], "Installing from source with Meson": [[7, "installing-from-source-with-meson"]], "Conda (Recommended)": [[7, "conda-recommended"]], "Examples using scikit-tree": [[8, "examples-using-scikit-tree"]], "Release History": [[9, "release-history"]], "What\u2019s new?": [[11, "what-s-new"]], "Version 0.1": [[11, "version-0-1"]], "Changelog": [[11, "changelog"]], "Code and Documentation Contributors": [[11, "code-and-documentation-contributors"]]}, "indexentries": {"module": [[0, "module-sktree"]], "sktree": [[0, "module-sktree"]], "unsupervisedobliquerandomforest (class in sktree)": [[2, "sktree.UnsupervisedObliqueRandomForest"]], "apply() (sktree.unsupervisedobliquerandomforest method)": [[2, "sktree.UnsupervisedObliqueRandomForest.apply"]], "base_estimator_ (sktree.unsupervisedobliquerandomforest property)": [[2, "sktree.UnsupervisedObliqueRandomForest.base_estimator_"]], "decision_path() (sktree.unsupervisedobliquerandomforest method)": [[2, "sktree.UnsupervisedObliqueRandomForest.decision_path"]], "estimator_ (sktree.unsupervisedobliquerandomforest property)": [[2, "sktree.UnsupervisedObliqueRandomForest.estimator_"]], "feature_importances_ (sktree.unsupervisedobliquerandomforest property)": [[2, "sktree.UnsupervisedObliqueRandomForest.feature_importances_"]], "fit() (sktree.unsupervisedobliquerandomforest method)": [[2, "sktree.UnsupervisedObliqueRandomForest.fit"]], "fit_predict() (sktree.unsupervisedobliquerandomforest method)": [[2, "sktree.UnsupervisedObliqueRandomForest.fit_predict"]], "fit_transform() (sktree.unsupervisedobliquerandomforest method)": [[2, "sktree.UnsupervisedObliqueRandomForest.fit_transform"]], "get_params() (sktree.unsupervisedobliquerandomforest method)": [[2, "sktree.UnsupervisedObliqueRandomForest.get_params"]], "predict() (sktree.unsupervisedobliquerandomforest method)": [[2, "sktree.UnsupervisedObliqueRandomForest.predict"]], "set_output() (sktree.unsupervisedobliquerandomforest method)": [[2, "sktree.UnsupervisedObliqueRandomForest.set_output"]], "set_params() (sktree.unsupervisedobliquerandomforest method)": [[2, "sktree.UnsupervisedObliqueRandomForest.set_params"]], "transform() (sktree.unsupervisedobliquerandomforest method)": [[2, "sktree.UnsupervisedObliqueRandomForest.transform"]], "unsupervisedrandomforest (class in sktree)": [[3, "sktree.UnsupervisedRandomForest"]], "apply() (sktree.unsupervisedrandomforest method)": [[3, "sktree.UnsupervisedRandomForest.apply"]], "base_estimator_ (sktree.unsupervisedrandomforest property)": [[3, "sktree.UnsupervisedRandomForest.base_estimator_"]], "decision_path() (sktree.unsupervisedrandomforest method)": [[3, "sktree.UnsupervisedRandomForest.decision_path"]], "estimator_ (sktree.unsupervisedrandomforest property)": [[3, "sktree.UnsupervisedRandomForest.estimator_"]], "feature_importances_ (sktree.unsupervisedrandomforest property)": [[3, "sktree.UnsupervisedRandomForest.feature_importances_"]], "fit() (sktree.unsupervisedrandomforest method)": [[3, "sktree.UnsupervisedRandomForest.fit"]], "fit_predict() (sktree.unsupervisedrandomforest method)": [[3, "sktree.UnsupervisedRandomForest.fit_predict"]], "fit_transform() (sktree.unsupervisedrandomforest method)": [[3, "sktree.UnsupervisedRandomForest.fit_transform"]], "get_params() (sktree.unsupervisedrandomforest method)": [[3, "sktree.UnsupervisedRandomForest.get_params"]], "predict() (sktree.unsupervisedrandomforest method)": [[3, "sktree.UnsupervisedRandomForest.predict"]], "set_output() (sktree.unsupervisedrandomforest method)": [[3, "sktree.UnsupervisedRandomForest.set_output"]], "set_params() (sktree.unsupervisedrandomforest method)": [[3, "sktree.UnsupervisedRandomForest.set_params"]], "transform() (sktree.unsupervisedrandomforest method)": [[3, "sktree.UnsupervisedRandomForest.transform"]], "unsuperviseddecisiontree (class in sktree.tree)": [[4, "sktree.tree.UnsupervisedDecisionTree"]], "apply() (sktree.tree.unsuperviseddecisiontree method)": [[4, "sktree.tree.UnsupervisedDecisionTree.apply"]], "cost_complexity_pruning_path() (sktree.tree.unsuperviseddecisiontree method)": [[4, "sktree.tree.UnsupervisedDecisionTree.cost_complexity_pruning_path"]], "decision_path() (sktree.tree.unsuperviseddecisiontree method)": [[4, "sktree.tree.UnsupervisedDecisionTree.decision_path"]], "feature_importances_ (sktree.tree.unsuperviseddecisiontree property)": [[4, "sktree.tree.UnsupervisedDecisionTree.feature_importances_"]], "fit_predict() (sktree.tree.unsuperviseddecisiontree method)": [[4, "sktree.tree.UnsupervisedDecisionTree.fit_predict"]], "fit_transform() (sktree.tree.unsuperviseddecisiontree method)": [[4, "sktree.tree.UnsupervisedDecisionTree.fit_transform"]], "get_depth() (sktree.tree.unsuperviseddecisiontree method)": [[4, "sktree.tree.UnsupervisedDecisionTree.get_depth"]], "get_n_leaves() (sktree.tree.unsuperviseddecisiontree method)": [[4, "sktree.tree.UnsupervisedDecisionTree.get_n_leaves"]], "get_params() (sktree.tree.unsuperviseddecisiontree method)": [[4, "sktree.tree.UnsupervisedDecisionTree.get_params"]], "predict() (sktree.tree.unsuperviseddecisiontree method)": [[4, "sktree.tree.UnsupervisedDecisionTree.predict"]], "set_output() (sktree.tree.unsuperviseddecisiontree method)": [[4, "sktree.tree.UnsupervisedDecisionTree.set_output"]], "set_params() (sktree.tree.unsuperviseddecisiontree method)": [[4, "sktree.tree.UnsupervisedDecisionTree.set_params"]], "transform() (sktree.tree.unsuperviseddecisiontree method)": [[4, "sktree.tree.UnsupervisedDecisionTree.transform"]], "unsupervisedobliquedecisiontree (class in sktree.tree)": [[5, "sktree.tree.UnsupervisedObliqueDecisionTree"]], "apply() (sktree.tree.unsupervisedobliquedecisiontree method)": [[5, "sktree.tree.UnsupervisedObliqueDecisionTree.apply"]], "cost_complexity_pruning_path() (sktree.tree.unsupervisedobliquedecisiontree method)": [[5, "sktree.tree.UnsupervisedObliqueDecisionTree.cost_complexity_pruning_path"]], "decision_path() (sktree.tree.unsupervisedobliquedecisiontree method)": [[5, "sktree.tree.UnsupervisedObliqueDecisionTree.decision_path"]], "feature_importances_ (sktree.tree.unsupervisedobliquedecisiontree property)": [[5, "sktree.tree.UnsupervisedObliqueDecisionTree.feature_importances_"]], "fit_predict() (sktree.tree.unsupervisedobliquedecisiontree method)": [[5, "sktree.tree.UnsupervisedObliqueDecisionTree.fit_predict"]], "fit_transform() (sktree.tree.unsupervisedobliquedecisiontree method)": [[5, "sktree.tree.UnsupervisedObliqueDecisionTree.fit_transform"]], "get_depth() (sktree.tree.unsupervisedobliquedecisiontree method)": [[5, "sktree.tree.UnsupervisedObliqueDecisionTree.get_depth"]], "get_n_leaves() (sktree.tree.unsupervisedobliquedecisiontree method)": [[5, "sktree.tree.UnsupervisedObliqueDecisionTree.get_n_leaves"]], "get_params() (sktree.tree.unsupervisedobliquedecisiontree method)": [[5, "sktree.tree.UnsupervisedObliqueDecisionTree.get_params"]], "predict() (sktree.tree.unsupervisedobliquedecisiontree method)": [[5, "sktree.tree.UnsupervisedObliqueDecisionTree.predict"]], "set_output() (sktree.tree.unsupervisedobliquedecisiontree method)": [[5, "sktree.tree.UnsupervisedObliqueDecisionTree.set_output"]], "set_params() (sktree.tree.unsupervisedobliquedecisiontree method)": [[5, "sktree.tree.UnsupervisedObliqueDecisionTree.set_params"]], "transform() (sktree.tree.unsupervisedobliquedecisiontree method)": [[5, "sktree.tree.UnsupervisedObliqueDecisionTree.transform"]]}})